name: .NET core

on: [push]

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: az-func-delete
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  ARTIFACT_NAME: published-function-app
  DOTNET_VERSION: 8.0.x
  PUBLISH_OUTPUT_FOLDER: publish-output
  BUILD_CONFIGURATION: Release
  SOLUTION_PATH: ./SPO-Webhook-Example.sln

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@main

      # Setup .NET core SDK
      - name: Setup .NET Core ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install depenecies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build
        run: >
          dotnet build
          --configuration ${{ env.BUILD_CONFIGURATION }}
          --no-restore
          ${{ env.SOLUTION_PATH }}

      - name: Publish
        run: >
          dotnet publish
          --configuration ${{ env.BUILD_CONFIGURATION }}
          --no-build
          --output ${{ env.PUBLISH_OUTPUT_FOLDER }}

      - name: List published files
        run: ls ${{ env.PUBLISH_OUTPUT_FOLDER }}
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PUBLISH_OUTPUT_FOLDER }}
          if-no-files-found: error
  deploy:
    runs-on: windows-latest

    needs: build

    steps:
      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: List files after download
        run: ls ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - uses: azure/login@v1
        with:
          # client-id: ${{ secrets.AZURE_CLIENT_ID }}
          # tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          # subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # # Run dotnet build and publish
      # - name: dotnet build and publish
      #   run: |
      #     dotnet restore
      #     dotnet build --configuration Release
      #     dotnet publish -c Release --property:PublishDir='${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'
      
      # Deploy to Azure WebApps
      - name: Run Azure webapp deploy action using publish profile credentials
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: <publishData><publishProfile profileName="az-func-delete - Web Deploy" publishMethod="MSDeploy" publishUrl="az-func-delete.scm.azurewebsites.net:443" msdeploySite="az-func-delete" userName="REDACTED" userPWD="REDACTED" destinationAppUrl="https://az-func-delete.azurewebsites.net" SQLServerDBConnectionString="REDACTED" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="az-func-delete - FTP" publishMethod="FTP" publishUrl="ftps://waws-prod-ch1-067.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="REDACTED" userPWD="REDACTED" destinationAppUrl="https://az-func-delete.azurewebsites.net" SQLServerDBConnectionString="REDACTED" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="az-func-delete - Zip Deploy" publishMethod="ZipDeploy" publishUrl="az-func-delete.scm.azurewebsites.net:443" userName="REDACTED" userPWD="REDACTED" destinationAppUrl="https://az-func-delete.azurewebsites.net" SQLServerDBConnectionString="REDACTED" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: logout
        run: |
          az logout